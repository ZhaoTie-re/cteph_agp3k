import pandas as pd
import numpy as np
import argparse
import pickle
import os

parser = argparse.ArgumentParser(description="Calculate variant missing rate under DP and GQ thresholds")
parser.add_argument("--DP", type=int, help="DP threshold")
parser.add_argument("--GQ", type=int, help="GQ threshold")
parser.add_argument("--GT_MX", type=str, help="GT matrix generated by bcftools ([%GT\\t]\\n)")
parser.add_argument("--DP_MX", type=str, help="DP matrix generated by bcftools ([%DP\\t]\\n)")
parser.add_argument("--GQ_MX", type=str, help="GQ matrix generated by bcftools ([%GQ\\t]\\n)")
args = parser.parse_args()

global_dp = args.DP
global_gq = args.GQ

# create dp & gq no-call mask based on the DP and GQ thresholds
def create_no_call_mask(dp_matrix, gq_matrix, dp_threshold, gq_threshold):
    dp_array = pd.DataFrame(dp_matrix).apply(pd.to_numeric, errors='coerce').values
    gq_array = pd.DataFrame(gq_matrix).apply(pd.to_numeric, errors='coerce').values

    dp_mask = dp_array < dp_threshold
    gq_mask = gq_array < gq_threshold

    no_call_mask = dp_mask | gq_mask
    return no_call_mask

# Apply the no-call mask to the GT matrix
def apply_no_call_mask(gt_matrix, no_call_mask):
    gt_array = np.array(gt_matrix, dtype=object)
    gt_array[no_call_mask] = np.nan
    return gt_array

# Calculate the missing rate
def calculate_missing_rate(gt_matrix):
    gt_array = np.array(gt_matrix, dtype=object)
    gt_array[(gt_array == './.') | (gt_array == '.|.')] = np.nan
    missing_rate = np.sum(pd.isna(gt_array), axis=1) / gt_array.shape[1]
    average_missing_rate = np.mean(missing_rate)
    return missing_rate, average_missing_rate

if __name__ == "__main__":
    # Load the input matrices in chunks
    gt_chunks = pd.read_csv(args.GT_MX, sep="\t", header=None, chunksize=2000, dtype=str)
    dp_chunks = pd.read_csv(args.DP_MX, sep="\t", header=None, chunksize=2000)
    gq_chunks = pd.read_csv(args.GQ_MX, sep="\t", header=None, chunksize=2000)

    result_chunks = []
    for gt_chunk, dp_chunk, gq_chunk in zip(gt_chunks, dp_chunks, gq_chunks):
        gt_chunk.replace(['./.', '.|.'], np.nan, inplace=True)
        gt_chunk = gt_chunk.infer_objects(copy=False)
        no_call_mask = create_no_call_mask(dp_chunk, gq_chunk, global_dp, global_gq)
        filtered_gt = apply_no_call_mask(gt_chunk, no_call_mask)
        missing_rate_chunk, _ = calculate_missing_rate(filtered_gt)
        result_chunks.append(pd.Series(missing_rate_chunk))

    all_missing_rate = pd.concat(result_chunks, ignore_index=True)
    average_missing_rate = all_missing_rate.mean()

    key_set = frozenset([f'DP{global_dp}', f'GQ{global_gq}'])
    result_dict = {key_set: (all_missing_rate, average_missing_rate)}

    with open(f'DP{global_dp}_GQ{global_gq}_vmissing_rate.pkl', 'wb') as f:
        pickle.dump(result_dict, f)
    
